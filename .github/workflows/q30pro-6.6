name: Build immortalwrt24.10-6.6 JCG Q30Pro (No Third-Party)

on:
  repository_dispatch:
  workflow_dispatch:

env:
  REPO_URL: https://github.com/padavanonly/immortalwrt-mt798x-24.10
  REPO_BRANCH: openwrt-24.10-6.6
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: 2410-6.6-q30pro-passwall.config
  RELEASE_FILE: 2410-6.6-release.txt
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: true
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Init build environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo apt-get -qq update
        sudo apt-get -qq install \
          ack antlr3 asciidoc autoconf automake autopoint binutils bison \
          build-essential bzip2 ccache clang cmake cpio curl device-tree-compiler \
          ecj fastjar flex gawk gettext gcc-multilib g++-multilib git gnutls-dev \
          gperf haveged help2man intltool lib32gcc-s1 libc6-dev-i386 libelf-dev \
          libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev \
          libncurses-dev libpython3-dev libreadline-dev libssl-dev libtool \
          libyaml-dev libz-dev lld llvm lrzsz mkisofs msmtp nano ninja-build \
          p7zip p7zip-full patch pkgconf python3 python3-pip python3-ply \
          python3-docutils python3-pyelftools qemu-utils re2c rsync scons \
          squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget \
          xmlto xxd zlib1g-dev zstd
        sudo timedatectl set-timezone "$TZ"
        mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir

    - name: Clone source code
      working-directory: /workdir
      run: |
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt

    - name: Load custom feeds
      run: |
        [ -e $FEEDS_CONF ] && mv $FEEDS_CONF openwrt/feeds.conf.default

    - name: Update feeds
      run: |
        cd openwrt
        ./scripts/feeds update -a

    - name: Install feeds
      run: |
        cd openwrt
        ./scripts/feeds install -a

    - name: Load custom configuration
      run: |
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config

    - name: Download package
      run: |
        cd openwrt
        make defconfig
        make download -j$(nproc)
        find dl -size -1024c -exec rm -f {} \;

    - name: Compile firmware
      run: |
        cd openwrt
        make -j$(nproc) || make -j1 V=s
        grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
        [ -s DEVICE_NAME ] && echo "DEVICE_NAME=_$(cat DEVICE_NAME)" >> $GITHUB_ENV
        echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV

    - name: Organize files
      if: env.UPLOAD_FIRMWARE == 'true'
      run: |
        cd openwrt/bin/targets/*/*
        rm -rf packages
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV

    - name: Upload firmware to Actions
      uses: actions/upload-artifact@v4
      if: env.UPLOAD_FIRMWARE == 'true'
      with:
        name: OpenWrt_firmware${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: ${{ env.FIRMWARE }}

    - name: Create release
      uses: softprops/action-gh-release@v2
      if: env.UPLOAD_RELEASE == 'true'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.run_id }}
        body_path: ${{ env.RELEASE_FILE }}
        files: ${{ env.FIRMWARE }}/*
